openapi: 3.0.3
info:
    title: 'VNJobs API Documentaion'
    description: ''
    version: 1.0.0
servers:
    -
        url: 'http://localhost'
paths:
    /api/v1/auth/login:
        post:
            summary: Login.
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'Auth endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: String
                                    description: ''
                                    example: est
                                password:
                                    type: String
                                    description: ''
                                    example: exercitationem
                            required:
                                - email
                                - password
            security: []
    /api/v1/job-seekers:
        get:
            summary: "List JobSeeker\nDisplay a listing of the job-seeker."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  \"current_page\": 1,\n  \"data\": [{\n     'user_id': 1,\n     'is_elect': 0,\n     'cv_path': \"string\",\n     'cover_letter_path': \"string\",\n     'cover_letter_path': \"string\",\n     'exp_years': 0,\n  }, {\n     'user_id': 1,\n     'is_elect': 0,\n     'cv_path': \"string\",\n     'cover_letter_path': \"string\",\n     'cover_letter_path': \"string\",\n     'exp_years': 0,\n  }],\n  \"first_page_url\": \"http://127.0.0.1:8000/api/v1/job-seekers?page=1\",\n  \"from\": null,\n  \"last_page\": 1,\n  \"last_page_url\": \"http://127.0.0.1:8000/api/v1/job-seekers?page=1\",\n  \"next_page_url\": null,\n  \"path\": \"http://127.0.0.1:8000/api/v1/job-seekers\",\n  \"per_page\": 10,\n  \"prev_page_url\": null,\n  \"to\": null,\n  \"total\": 0\n}"
            tags:
                - 'JobSeeker endpoints'
            security: []
        post:
            summary: "Create a JobSeeker\nStore a newly created job-seeker in database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     'id': 1,\n     'user_id': 1,\n     'is_elect': 0,\n     'cv_path': \"string\",\n     'cover_letter_path': \"string\",\n     'cover_letter_path': \"string\",\n     'exp_years': 0,\n}"
            tags:
                - 'JobSeeker endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 20
                                is_elect:
                                    type: boolean
                                    description: ''
                                    example: false
                                cv_path:
                                    type: string
                                    description: ''
                                    example: {  }
                                cover_letter_path:
                                    type: string
                                    description: ''
                                    example: ut
                                exp_years:
                                    type: integer
                                    description: ''
                                    example: 10
                            required:
                                - user_id
                                - exp_years
            security: []
    '/api/v1/job-seekers/{id}':
        get:
            summary: "Find a JobSeeker\nDisplay the specified job-seeker."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     'id': 1,\n     'user_id': 1,\n     'is_elect': 0,\n     'cv_path': \"string\",\n     'cover_letter_path': \"string\",\n     'cover_letter_path': \"string\",\n     'exp_years': 0,\n}"
            tags:
                - 'JobSeeker endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                int:
                                    type: $id
                                    description: ''
                                    example: fuga
                            required:
                                - int
            security: []
        put:
            summary: "Update a JobSeeker\nUpdate the specified job-seeker in database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     'id': 1,\n     'user_id': 1,\n     'is_elect': 0,\n     'cv_path': \"string\",\n     'cover_letter_path': \"string\",\n     'cover_letter_path': \"string\",\n     'exp_years': 0,\n}"
            tags:
                - 'JobSeeker endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: integer
                                    description: ''
                                    example: 2
                                is_elect:
                                    type: boolean
                                    description: ''
                                    example: false
                                cv_path:
                                    type: string
                                    description: ''
                                    example: {  }
                                cover_letter_path:
                                    type: string
                                    description: ''
                                    example: aut
                                exp_years:
                                    type: integer
                                    description: ''
                                    example: 7
                            required:
                                - user_id
                                - exp_years
            security: []
        delete:
            summary: "Remove a JobSeeker\nRemove the specified job-seeker from database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - 'JobSeeker endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                int:
                                    type: $id
                                    description: ''
                                    example: rerum
                            required:
                                - int
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: voluptate
                required: true
                schema:
                    type: string
    /api/v1/majors:
        get:
            summary: "List Major\nDisplay a listing of the resource."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"current_page\": 1,\ndata: [{\n  \"id\": 1,\n  \"major_name\": \"string\",\n  \"image_path\": \"string\",\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n  },\n {\n  \"id\": 1,\n  \"major_name\": \"string\",\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n  }\n],\n,\n  \"first_page_url\": \"http://127.0.0.1:8000/api/v1/majors?page=1\",\n  \"from\": 1,\n  \"last_page\": 1,\n  \"last_page_url\": \"http://127.0.0.1:8000/api/v1/majors?page=1\",\n  \"next_page_url\": null,\n  \"path\": \"http://127.0.0.1:8000/api/v1/majors\",\n  \"per_page\": 10,\n  \"prev_page_url\": null,\n  \"to\": 10,\n  \"total\": 2\n}"
            tags:
                - 'Major endpoints'
            security: []
        post:
            summary: "Create Major\nStore a newly created major in database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    major_name: string
                                    image_path: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 1 }
                                    major_name: { type: string, example: string }
                                    image_path: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Major endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                major_name:
                                    type: string
                                    description: ''
                                    example: rerum
                                image_path:
                                    type: string
                                    description: ''
                                    example: est
                            required:
                                - major_name
            security: []
    '/api/v1/majors/{id}':
        get:
            summary: "Find a Major\nDisplay the specified major."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    major_name: string
                                    image_path: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 1 }
                                    major_name: { type: string, example: string }
                                    image_path: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Major endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                int:
                                    type: id
                                    description: 'The id of the major.'
                                    example: incidunt
                            required:
                                - int
            security: []
        put:
            summary: "Update Major's Information\nUpdate the specified major in database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    major_name: string
                                    image_path: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 1 }
                                    major_name: { type: string, example: string }
                                    image_path: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Major endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                major_name:
                                    type: string
                                    description: ''
                                    example: quia
                                image_path:
                                    type: string
                                    description: ''
                                    example: et
                            required:
                                - major_name
            security: []
        delete:
            summary: "Remove a Major\nRemove the specified major from database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    major_name: string
                                    image_path: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 1 }
                                    major_name: { type: string, example: string }
                                    image_path: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Major endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                int:
                                    type: id
                                    description: 'The id of the major.'
                                    example: aperiam
                            required:
                                - int
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: voluptate
                required: true
                schema:
                    type: string
    /api/v1/organizations:
        get:
            summary: "List Organization\nDisplay a listing of the Organization."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"current_page\": 1,\ndata: [{\n  \"id\": 1,\n  \"owner_id\": 1,\n  \"org_name\": \"Công ty Vi Inc\",\n  \"phones\": \"+84-165-015-8016\",\n  \"description\": \"string\",\n  \"tax_id\": \"41665\",\n  \"address\": \"string\",\n  \"is_verify\": 0,\n  \"logo_path\": \"string\",\n  \"cover_path\": \"string\",\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n  },\n {\n  \"id\": 2,\n  \"owner_id\": 1,\n  \"org_name\": \"Công ty Vi Inc\",\n  \"phones\": \"+84-165-015-8016\",\n  \"description\": \"string\",\n  \"tax_id\": \"41665\",\n  \"address\": \"string\",\n  \"is_verify\": 0,\n  \"logo_path\": \"string\",\n  \"cover_path\": \"string\",\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n  },\n],\n,\n  \"first_page_url\": \"http://127.0.0.1:8000/api/v1/organizations?page=1\",\n  \"from\": 1,\n  \"last_page\": 1,\n  \"last_page_url\": \"http://127.0.0.1:8000/api/v1/organizations?page=1\",\n  \"next_page_url\": null,\n  \"path\": \"http://127.0.0.1:8000/api/v1/organizations\",\n  \"per_page\": 10,\n  \"prev_page_url\": null,\n  \"to\": 10,\n  \"total\": 2\n}"
            tags:
                - 'Organization endpoints'
            security: []
        post:
            summary: "Create Organization\nStore a newly created resource in Database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    owner_id: 1
                                    org_name: 'Công ty Vi Inc'
                                    phones: +84-165-015-8016
                                    description: string
                                    tax_id: '41665'
                                    address: string
                                    is_verify: 0
                                    logo_path: string
                                    cover_path: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 1 }
                                    owner_id: { type: integer, example: 1 }
                                    org_name: { type: string, example: 'Công ty Vi Inc' }
                                    phones: { type: string, example: +84-165-015-8016 }
                                    description: { type: string, example: string }
                                    tax_id: { type: string, example: '41665' }
                                    address: { type: string, example: string }
                                    is_verify: { type: integer, example: 0 }
                                    logo_path: { type: string, example: string }
                                    cover_path: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Organization endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                owner_id:
                                    type: integer
                                    description: ''
                                    example: 15
                                org_name:
                                    type: string
                                    description: ''
                                    example: cumque
                                phones:
                                    type: string
                                    description: ''
                                    example: culpa
                                description:
                                    type: string
                                    description: ''
                                    example: et
                                tax_id:
                                    type: integer
                                    description: ''
                                    example: 8
                                address:
                                    type: string
                                    description: ''
                                    example: iste
                                logo_path:
                                    type: string
                                    description: ''
                                    example: tempore
                                cover_path:
                                    type: string
                                    description: ''
                                    example: dolorem
                            required:
                                - owner_id
                                - org_name
                                - phones
                                - description
                                - tax_id
            security: []
    '/api/v1/organizations/{id}':
        get:
            summary: "Find an Organization\nDisplay the specified resource."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    owner_id: 1
                                    org_name: 'Công ty Vi Inc'
                                    phones: +84-165-015-8016
                                    description: string
                                    tax_id: '41665'
                                    address: string
                                    is_verify: 0
                                    logo_path: string
                                    cover_path: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 1 }
                                    owner_id: { type: integer, example: 1 }
                                    org_name: { type: string, example: 'Công ty Vi Inc' }
                                    phones: { type: string, example: +84-165-015-8016 }
                                    description: { type: string, example: string }
                                    tax_id: { type: string, example: '41665' }
                                    address: { type: string, example: string }
                                    is_verify: { type: integer, example: 0 }
                                    logo_path: { type: string, example: string }
                                    cover_path: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Organization endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                int:
                                    type: id
                                    description: ''
                                    example: cumque
                            required:
                                - int
            security: []
        put:
            summary: "Update an Organization\nUpdate the specified resource in Database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    owner_id: 1
                                    org_name: 'Công ty Vi Inc'
                                    phones: +84-165-015-8016
                                    description: string
                                    tax_id: '41665'
                                    address: string
                                    is_verify: 0
                                    logo_path: string
                                    cover_path: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 1 }
                                    owner_id: { type: integer, example: 1 }
                                    org_name: { type: string, example: 'Công ty Vi Inc' }
                                    phones: { type: string, example: +84-165-015-8016 }
                                    description: { type: string, example: string }
                                    tax_id: { type: string, example: '41665' }
                                    address: { type: string, example: string }
                                    is_verify: { type: integer, example: 0 }
                                    logo_path: { type: string, example: string }
                                    cover_path: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Organization endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                owner_id:
                                    type: integer
                                    description: ''
                                    example: 19
                                org_name:
                                    type: string
                                    description: ''
                                    example: vero
                                phones:
                                    type: string
                                    description: ''
                                    example: impedit
                                description:
                                    type: string
                                    description: ''
                                    example: officia
                                tax_id:
                                    type: integer
                                    description: ''
                                    example: 16
                                address:
                                    type: string
                                    description: ''
                                    example: eos
                                logo_path:
                                    type: string
                                    description: ''
                                    example: expedita
                                cover_path:
                                    type: string
                                    description: ''
                                    example: quo
                            required:
                                - owner_id
                                - org_name
                                - phones
                                - description
                                - tax_id
            security: []
        delete:
            summary: "Remove an Organization\nRemove the Organization from Database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    owner_id: 1
                                    org_name: 'Công ty Vi Inc'
                                    phones: +84-165-015-8016
                                    description: string
                                    tax_id: '41665'
                                    address: string
                                    is_verify: 0
                                    logo_path: string
                                    cover_path: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 1 }
                                    owner_id: { type: integer, example: 1 }
                                    org_name: { type: string, example: 'Công ty Vi Inc' }
                                    phones: { type: string, example: +84-165-015-8016 }
                                    description: { type: string, example: string }
                                    tax_id: { type: string, example: '41665' }
                                    address: { type: string, example: string }
                                    is_verify: { type: integer, example: 0 }
                                    logo_path: { type: string, example: string }
                                    cover_path: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Organization endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                int:
                                    type: id
                                    description: ''
                                    example: vitae
                            required:
                                - int
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: est
                required: true
                schema:
                    type: string
    /api/v1/recruitment-news:
        get:
            summary: "List Recruitment News\nDisplay a listing of the recruitment news."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"current_page\": 1,\ndata: [{\n  'id': 1,\n  'org_id': 1,\n  'author_id': 1,\n  'major_id': 1,\n  'title': 'string',\n  'content': 'string',\n  'address': 'string',\n  'city': 'string',\n  'start_time': '1990-12-12 12:45:10',\n  'end_time': '1990-12-12 12:45:10',\n  'interview_start_time': '1990-12-12 12:45:10',\n  'interview_end_time': '1990-12-12 12:45:10',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n  },\n {\n  \"id\": 2,\n  'org_id': 1,\n  'author_id': 1,\n  'major_id': 1,\n  'title': 'string',\n  'content': 'string',\n  'address': 'string',\n  'city': 'string',\n  'start_time': '1990-12-12 12:45:10',\n  'address': '1990-12-12 12:45:10',\n  'interview_start_time': '1990-12-12 12:45:10',\n  'interview_end_time': '1990-12-12 12:45:10',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n  }\n],\n,\n  \"first_page_url\": \"http://127.0.0.1:8000/api/v1/recruitment-news?page=1\",\n  \"from\": 1,\n  \"last_page\": 1,\n  \"last_page_url\": \"http://127.0.0.1:8000/api/v1/recruitment-news?page=1\",\n  \"next_page_url\": null,\n  \"path\": \"http://127.0.0.1:8000/api/v1/recruitment-news\",\n  \"per_page\": 10,\n  \"prev_page_url\": null,\n  \"to\": 2,\n  \"total\": 2\n}"
            tags:
                - 'Recruitment News endpoints'
            security: []
        post:
            summary: "Create a Recruitment News\nStore a newly created recruitment news in database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  'id': 1,\n  'org_id': 1,\n  'author_id': 1,\n  'major_id': 1,\n  'title': 'string',\n  'content': 'string',\n  'address': 'string',\n  'city': 'string',\n  'start_time': '1990-12-12 12:45:10',\n  'end_time': '1990-12-12 12:45:10',\n  'interview_start_time': '1990-12-12 12:45:10',\n  'interview_end_time': '1990-12-12 12:45:10',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n}"
            tags:
                - 'Recruitment News endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                org_id:
                                    type: integer
                                    description: ''
                                    example: 10
                                author_id:
                                    type: integer
                                    description: ''
                                    example: 4
                                major_id:
                                    type: integer
                                    description: ''
                                    example: 15
                                title:
                                    type: string
                                    description: ''
                                    example: sit
                                content:
                                    type: string
                                    description: ''
                                    example: alias
                                address:
                                    type: string
                                    description: ''
                                    example: non
                                city:
                                    type: string
                                    description: ''
                                    example: enim
                                start_time:
                                    type: string
                                    description: 'The value must be a valid date.'
                                    example: '2021-01-11T05:08:45+0000'
                                end_time:
                                    type: string
                                    description: 'The value must be a valid date.'
                                    example: '2021-01-11T05:08:45+0000'
                                interview_start_time:
                                    type: string
                                    description: 'The value must be a valid date.'
                                    example: '2021-01-11T05:08:45+0000'
                                interview_end_time:
                                    type: string
                                    description: 'The value must be a valid date.'
                                    example: '2021-01-11T05:08:45+0000'
                            required:
                                - org_id
                                - author_id
                                - major_id
                                - title
                                - content
                                - address
                                - city
                                - start_time
                                - end_time
                                - interview_start_time
                                - interview_end_time
            security: []
    '/api/v1/recruitment-news/{id}':
        get:
            summary: "Find a Recruitment News\nDisplay the specified recruitment news."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  'id': 1,\n  'org_id': 1,\n  'author_id': 1,\n  'major_id': 1,\n  'title': 'string',\n  'content': 'string',\n  'address': 'string',\n  'city': 'string',\n  'start_time': '1990-12-12 12:45:10',\n  'end_time': '1990-12-12 12:45:10',\n  'interview_start_time': '1990-12-12 12:45:10',\n  'interview_end_time': '1990-12-12 12:45:10',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n}"
            tags:
                - 'Recruitment News endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                int:
                                    type: id
                                    description: ''
                                    example: qui
                            required:
                                - int
            security: []
        put:
            summary: "Update Recruitment News's Information\nUpdate the specified recruitment news in database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  'id': 1,\n  'org_id': 1,\n  'author_id': 1,\n  'major_id': 1,\n  'title': 'string',\n  'content': 'string',\n  'address': 'string',\n  'city': 'string',\n  'start_time': '1990-12-12 12:45:10',\n  'end_time': '1990-12-12 12:45:10',\n  'interview_start_time': '1990-12-12 12:45:10',\n  'interview_end_time': '1990-12-12 12:45:10',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n}"
            tags:
                - 'Recruitment News endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                org_id:
                                    type: integer
                                    description: ''
                                    example: 3
                                author_id:
                                    type: integer
                                    description: ''
                                    example: 3
                                major_id:
                                    type: integer
                                    description: ''
                                    example: 16
                                title:
                                    type: string
                                    description: ''
                                    example: dolores
                                content:
                                    type: string
                                    description: ''
                                    example: in
                                address:
                                    type: string
                                    description: ''
                                    example: quod
                                city:
                                    type: string
                                    description: ''
                                    example: id
                                start_time:
                                    type: string
                                    description: 'The value must be a valid date.'
                                    example: '2021-01-11T05:08:45+0000'
                                end_time:
                                    type: string
                                    description: 'The value must be a valid date.'
                                    example: '2021-01-11T05:08:45+0000'
                                interview_start_time:
                                    type: string
                                    description: 'The value must be a valid date.'
                                    example: '2021-01-11T05:08:45+0000'
                                interview_end_time:
                                    type: string
                                    description: 'The value must be a valid date.'
                                    example: '2021-01-11T05:08:45+0000'
                            required:
                                - org_id
                                - author_id
                                - major_id
                                - title
                                - content
                                - address
                                - city
                                - start_time
                                - end_time
                                - interview_start_time
                                - interview_end_time
            security: []
        delete:
            summary: "Remove a Recruitment News\nRemove the specified recruitment news from database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  'id': 1,\n  'org_id': 1,\n  'author_id': 1,\n  'major_id': 1,\n  'title': 'string',\n  'content': 'string',\n  'address': 'string',\n  'city': 'string',\n  'start_time': '1990-12-12 12:45:10',\n  'end_time': '1990-12-12 12:45:10',\n  'interview_start_time': '1990-12-12 12:45:10',\n  'interview_end_time': '1990-12-12 12:45:10',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n}"
            tags:
                - 'Recruitment News endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                int:
                                    type: id
                                    description: 'The id of the recruitment news'
                                    example: iste
                            required:
                                - int
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: nemo
                required: true
                schema:
                    type: string
    /api/v1/roles:
        get:
            summary: "List Role\nDisplay a listing of the role."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"current_page\": 1,\ndata: [{\n  \"id\": 1,\n  \"role_name\": \"string\",\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n  },\n {\n  \"id\": 2,\n  \"role_name\": \"string\",\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n  }\n],\n,\n  \"first_page_url\": \"http://127.0.0.1:8000/api/v1/roles?page=1\",\n  \"from\": 1,\n  \"last_page\": 1,\n  \"last_page_url\": \"http://127.0.0.1:8000/api/v1/roles?page=1\",\n  \"next_page_url\": null,\n  \"path\": \"http://127.0.0.1:8000/api/v1/roles\",\n  \"per_page\": 10,\n  \"prev_page_url\": null,\n  \"to\": 2,\n  \"total\": 2\n}"
            tags:
                - 'Role endpoints'
            security: []
        post:
            summary: "Create a Role\nStore a newly created role in database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 2
                                    role_name: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 2 }
                                    role_name: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Role endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                role_name:
                                    type: string
                                    description: ''
                                    example: ad
                            required:
                                - role_name
            security: []
    '/api/v1/roles/{id}':
        get:
            summary: "Find a Role\nDisplay the specified role."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 2
                                    role_name: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 2 }
                                    role_name: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Role endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                int:
                                    type: $id
                                    description: ''
                                    example: et
                            required:
                                - int
            security: []
        put:
            summary: "Update Role's Information\nUpdate the specified role in database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 2
                                    role_name: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 2 }
                                    role_name: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Role endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                role_name:
                                    type: string
                                    description: ''
                                    example: fugit
                            required:
                                - role_name
            security: []
        delete:
            summary: "Remove a Role\nRemove the specified role from database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 2
                                    role_name: string
                                    created_at: '1990-12-12 12:45:10'
                                    updated_at: '1990-12-12 12:45:10'
                                properties:
                                    id: { type: integer, example: 2 }
                                    role_name: { type: string, example: string }
                                    created_at: { type: string, example: '1990-12-12 12:45:10' }
                                    updated_at: { type: string, example: '1990-12-12 12:45:10' }
            tags:
                - 'Role endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                int:
                                    type: $id
                                    description: ''
                                    example: occaecati
                            required:
                                - int
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: recusandae
                required: true
                schema:
                    type: string
    /api/v1/users:
        get:
            summary: "List User\nDisplay a listing of the user."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\"current_page\": 1,\n\"data\": [{\n  'id': 1,\n  'role_id': 1,\n  'first_name': 'string',\n  'last_name': 'string',\n  'dob': '1990-12-12',\n  'phone': '098 0983 092',\n  'email': 'string',\n  'email_verified_at': '1990-12-12 12:45:10',\n  'password': 'string',\n  'address': 'string',\n  'bio': 'string',\n  'avatar_path': 'string',\n  'social_linkedin': 'string',\n  'social_facebook': 'string',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n  },\n {\n  \"id\": 2,\n  'role_id': 1,\n  'first_name': 'string',\n  'last_name': 'string',\n  'dob': '1990-12-12',\n  'phone': '098 0983 092',\n  'email': 'string',\n  'email_verified_at': '1990-12-12 12:45:10',\n  'password': 'string',\n  'address': 'string',\n  'bio': 'string',\n  'avatar_path': 'string',\n  'social_linkedin': 'string',\n  'social_facebook': 'string',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n  }\n],\n,\n  \"first_page_url\": \"http://127.0.0.1:8000/api/v1/users?page=1\",\n  \"from\": 1,\n  \"last_page\": 1,\n  \"last_page_url\": \"http://127.0.0.1:8000/api/v1/users?page=1\",\n  \"next_page_url\": null,\n  \"path\": \"http://127.0.0.1:8000/api/v1/users\",\n  \"per_page\": 10,\n  \"prev_page_url\": null,\n  \"to\": 2,\n  \"total\": 2\n}"
            tags:
                - 'User endpoints'
            security: []
        post:
            summary: "Create a User\nStore a newly created user in database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  'id': 1,\n  'role_id': 1,\n  'first_name': 'string',\n  'last_name': 'string',\n  'dob': '1990-12-12',\n  'phone': '098 0983 092',\n  'email': 'string',\n  'email_verified_at': '1990-12-12 12:45:10',\n  'password': 'string',\n  'address': 'string',\n  'bio': 'string',\n  'avatar_path': 'string',\n  'social_linkedin': 'string',\n  'social_facebook': 'string',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n}"
            tags:
                - 'User endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                role_id:
                                    type: integer
                                    description: ''
                                    example: 6
                                first_name:
                                    type: string
                                    description: 'The first name of the user.'
                                    example: molestiae
                                last_name:
                                    type: string
                                    description: 'The last name of the user.'
                                    example: sed
                                dob:
                                    type: date
                                    description: 'The date of birth of the user.'
                                    example: dolorum
                                phone:
                                    type: string
                                    description: 'The phone number of the user.'
                                    example: cupiditate
                                email:
                                    type: email
                                    description: 'The email of the user.'
                                    example: id
                                password:
                                    type: string
                                    description: 'The password of the user.'
                                    example: iure
                                address:
                                    type: string
                                    description: 'The address of the user.'
                                    example: tenetur
                                bio:
                                    type: string
                                    description: 'The introduce of the user.'
                                    example: et
                                avatar_path:
                                    type: string
                                    description: 'The avatar''s image path of the user.'
                                    example: esse
                                social_linkedin:
                                    type: string
                                    description: 'The linkedin link of the user.'
                                    example: facere
                                social_facebook:
                                    type: string
                                    description: 'The facebook link of the user.'
                                    example: expedita
                            required:
                                - role_id
                                - first_name
                                - last_name
                                - dob
                                - phone
                                - email
                                - password
                                - address
            security: []
    '/api/v1/users/{id}':
        get:
            summary: "Find a User\nDisplay the specified user."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  'id': 1,\n  'role_id': 1,\n  'first_name': 'string',\n  'last_name': 'string',\n  'dob': '1990-12-12',\n  'phone': '098 0983 092',\n  'email': 'string',\n  'email_verified_at': '1990-12-12 12:45:10',\n  'password': 'string',\n  'address': 'string',\n  'bio': 'string',\n  'avatar_path': 'string',\n  'social_linkedin': 'string',\n  'social_facebook': 'string',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n}"
            tags:
                - 'User endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: integer
                                    description: 'The id of the user.'
                                    example: 8
                            required:
                                - id
            security: []
        put:
            summary: "Update User's Information\nUpdate the specified user in database."
            description: .
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  'id': 1,\n  'role_id': 1,\n  'first_name': 'string',\n  'last_name': 'string',\n  'dob': '1990-12-12',\n  'phone': '098 0983 092',\n  'email': 'string',\n  'email_verified_at': '1990-12-12 12:45:10',\n  'password': 'string',\n  'address': 'string',\n  'bio': 'string',\n  'avatar_path': 'string',\n  'social_linkedin': 'string',\n  'social_facebook': 'string',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n}"
            tags:
                - 'User endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                role_id:
                                    type: integer
                                    description: ''
                                    example: 13
                                first_name:
                                    type: string
                                    description: ''
                                    example: veniam
                                last_name:
                                    type: string
                                    description: ''
                                    example: soluta
                                dob:
                                    type: string
                                    description: 'The value must be a valid date.'
                                    example: '2021-01-11T05:08:45+0000'
                                phone:
                                    type: string
                                    description: ''
                                    example: maxime
                                email:
                                    type: string
                                    description: 'The value must be a valid email address.'
                                    example: lueilwitz.kobe@example.com
                                password:
                                    type: string
                                    description: ''
                                    example: molestiae
                                address:
                                    type: string
                                    description: ''
                                    example: praesentium
                            required:
                                - role_id
                                - first_name
                                - last_name
                                - dob
                                - phone
                                - email
                                - password
                                - address
            security: []
        delete:
            summary: "Remove a User\nRemove the specified user from database."
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n  'id': 1,\n  'role_id': 1,\n  'first_name': 'string',\n  'last_name': 'string',\n  'dob': '1990-12-12',\n  'phone': '098 0983 092',\n  'email': 'string',\n  'email_verified_at': '1990-12-12 12:45:10',\n  'password': 'string',\n  'address': 'string',\n  'bio': 'string',\n  'avatar_path': 'string',\n  'social_linkedin': 'string',\n  'social_facebook': 'string',\n  \"created_at\": \"1990-12-12 12:45:10\",\n  \"updated_at\": \"1990-12-12 12:45:10\"\n}"
            tags:
                - 'User endpoints'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: integer
                                    description: 'The id of the user.'
                                    example: 17
                            required:
                                - id
            security: []
        parameters:
            -
                in: path
                name: id
                description: ''
                example: distinctio
                required: true
                schema:
                    type: string
